@model ManageCircularModel
@{
    ViewData["Title"] = "ManageCircular";
    Layout = "~/Views/Shared/_InstituteLayout.cshtml";
    Pager pager = new Pager();
    int pageNo = 0;
    if (ViewBag.Pager != null)
    {
        pager = ViewBag.Pager;
        pageNo = pager.CurrentPage;
    }
}
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>*@
<style>
    .table-borderless, .table-borderless td, .table-borderless th {
        border: none;
        border-top: none !important;
      /*  margin-top: 10px;
        padding: 0;*/
    }
    tr{
        margin-top:5em !important;
    }

    #viewCircular{
        margin:0px;
        padding:0px;
    }
    #snackbar {
        background-color: green;
        visibility: hidden;
        min-width: 250px;
        margin-left: -113px;
        color: #fff;
        text-align: center;
        border-radius: 2px;
        padding: 21px;
        position: fixed;
        z-index: 1;
        left: 90%;
        top: 82px;
        font-size: 17px;
    }

        #snackbar.show {
            visibility: visible;
            -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
            animation: fadein 0.5s, fadeout 0.5s 2.5s;
        }


        #snackbar.show {
            visibility: visible;
            -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
            animation: fadein 0.5s, fadeout 0.5s 2.5s;
        }

    #snackbardanger {
        background-color: red;
        visibility: hidden;
        min-width: 250px;
        margin-left: -113px;
        color: #fff;
        text-align: center;
        border-radius: 2px;
        padding: 21px;
        position: fixed;
        z-index: 1;
        left: 90%;
        top: 82px;
        font-size: 17px;
    }

        #snackbardanger.show {
            visibility: visible;
            -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;
            animation: fadein 0.5s, fadeout 0.5s 2.5s;
        }

    @@-webkit-keyframes fadein {
        from {
            top: 0;
            opacity: 0;
        }

        to {
            top: 30px;
            opacity: 1;
        }
    }

    @@keyframes fadein {
        from {
            top: 0;
            opacity: 0;
        }

        to {
            top: 30px;
            opacity: 1;
        }
    }

    @@-webkit-keyframes fadeout {
        from {
            top: 30px;
            opacity: 1;
        }

        to {
            top: 0;
            opacity: 0;
        }
    }

    @@keyframes fadeout {
        from {
            top: 30px;
            opacity: 1;
        }

        to {
            top: 0;
            opacity: 0;
        }
    }

    .spacing {
        margin-left: 30px;
    }
</style>





<div class="container">
    <div class="row">
        <h3 class="mt-4"> Circular</h3>
       
    </div>
    <div class="row d-flex flex-row">
        <form novalidate asp-action="SearchCircular" asp-controller="Institute" method="get" class="d-flex flex-row">
            <div class="form-group row col-sm-4">
                <label for="circularTitle" class="col-sm-3 col-form-label">Title</label>
                <div class="col-sm-9">
                    <input type="text" class="form-control" id="circularTitle" name="circularTitle" placeholder="Enter The Circular Title">
                </div>
            </div>

            <div class="form-group row col-sm-4">
                <label for="description" class="col-sm-4 col-form-label">Description </label>
                <div class="col-sm-7">
                    <input type="text" class="form-control" id="description" name="description" placeholder="Enter The Description">
                </div>
            </div>

            <div class="form-group row col-sm-4">
                <label for="status" class="col-sm-3 col-form-label">Status </label>
                <div class="col-sm-5">
                    <select class="form-control" id="status" name="status">
                        <option value="true" selected>Sent</option>
                        <option value="false">Draft</option>
                    </select>
                </div>
            </div>
            <div class=" col-sm-12">
                <button type="Submit" class="btn btn-primary " style="margin-left:-1em;">Search</button>
            </div>
        </form>
    </div>
</div>
<br />
<div class="col-sm-12">
    <button type="button" class="btn btn-primary pull-right m-2" data-toggle="modal" data-target="#myModal">
    Create Circular
</button>
</div>
<div class="col-md-11">

    
    <div class="container">
        <!-- The Modal -->
        <div class="modal" id="myModal">
            <div class="modal-dialog">
                <div class="modal-content">

                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title text-center">Create Circular</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <p style="font-weight: bold; margin-left: 0.5em;">All <span style="color:red;">*</span> fields are mandatory</p>

                    <!-- Modal body -->
                    <div class="modal-body">
                        <form method="post" novalidate enctype="multipart/form-data" asp-action="SendCircular" asp-controller="Institute">
                          
                            <table class="table table-borderless">
                                <tr>
                                    <th>
                                        <label>Select School<span class="text-danger">*</span></label>
                                    </th>
                                    <td>

                                        <select class="form-control" asp-for="AddCircular.SchoolId" asp-items="Model.Schools" id="school">
                                            <option disabled selected hidden> Select School</option>
                                        </select>
                                        <span asp-validation-for="AddCircular.SchoolId" class="text-danger"></span>
                                    </td>
                                </tr>
                                <tr>
                                    <th>
                                        <label>Circular Title<span class="text-danger">*</span></label>
                                    </th>
                                    <td>
                                        <input type="text" class="form-control" asp-for="AddCircular.CircularTitle" id="circulartitle" />
                                        <span asp-validation-for="AddCircular.CircularTitle" class="text-danger"></span>

                                    </td>
                                </tr>
                                <tr>
                                    <th>
                                        <label>Description<span class="text-danger">*</span></label>
                                    </th>
                                    <td>
                                        <textarea id="description" asp-for="AddCircular.Description" rows="4" cols="40"></textarea>
                                        <span asp-validation-for="AddCircular.Description" class="text-danger"></span>

                                    </td>
                                </tr>
                                <tr>
                                    <th>
                                        <label>File</label>
                                    </th>
                                    <td>
                                        @*  <input type='file' name="fileUpload" asp-for="AddCircular.fileUpload" />
                            <span asp-validation-for="AddCircular.fileUpload" class="text-danger"></span>*@
                                        @Html.TextBoxFor(m => m.AddCircular.fileUpload, new { type = "file" })
                                        <br />
                                        @Html.ValidationMessageFor(m => m.AddCircular.fileUpload, "", new { @class = "text-danger" })
                                    </td>
                                </tr>
                            </table>
                            <div class="modal-footer">
                                <input type="submit" class="btn btn-primary float-lg-end ButtonDesign" value="Send" name="SendCircular" />
                                <input type="submit" class="btn btn-primary float-lg-end ButtonDesign" value="Save" name="SendCircular" />
                                @*  <a href="/Institute/SaveCircular" class="btn btn-primary float-lg-end ButtonDesign">Save</a>*@
                                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                            </div>

                        </form>


                    </div>

                </div>
            </div>
        </div>

    </div>
</div>
<div id="wrap" class="mt-3">
    <div class="container">
        <table cellpadding="0" cellspacing="0" border="0" width="100%" class="table table-striped table-bordered table-hover">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Circular Title</th>
                    <th>Description</th>
                    <th>School Name</th>
                    <th>Status</th>
                    <th>Created Date</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="tableData">

                @if (Model.CircularListPagination.Count() < 1)
                {
                    <tr>

                        <td colspan="7" class="text-center">

                            No Records Found
                        </td>
                    </tr>

                }
                else
                {
                    int i = 1;
                    @foreach (var item in Model.CircularListPagination)
                    {
                       
            <tr>
              
                <td>
                    <label>@i</label>
                    @{ i++; }
                </td>
                <td>
                    @item.CircularTitle
                </td>
                <td>
                    @item.Description
                </td>

                <td>
                    @item.SchoolData.SchoolName
                </td>
                <td>
                    @(item.Status?"Sent":"Draft")
                </td>
                <td>
                    @item.CreatedDate?.ToShortDateString()
                </td>
                <td>
                    @if (item.Status)
                    {
                        <button type="button" class="btn btn-link" data-toggle="modal" data-target="#viewCircular" onclick="ShowCircularDetail(@item.Id)">
                            View
                        </button>

                    }

                    else
                    {<div>
                            <button type="button" class="btn btn-link" data-toggle="modal" data-target="#editCircular" onclick="EditCircular(@item.Id)">
                                Edit
                            </button>

                            <button type="button" class="btn btn-link" data-toggle="modal" data-target="#confirmdelete" onclick="tempData(@item.Id)">
                                Delete
                            </button>

                        </div>}

                </td>
            </tr>

                    }
                }


            </tbody>
        </table>
    </div>
</div>

<div class="container" id="paginationContainer">
    <span class="justify-content-start">
        <label>Rows Per Page</label>
        <select class="" id="rowsPerPage" onchange="changePages()">
            <option value="5" selected>5</option>
            <option value="25">25</option>
            <option value="50">50</option>
            <option value="100">100</option>
        </select>
    </span>
    @if (Model.Pager.TotalPages == 0) { }
    else if (Model.Pager.TotalPages > 0)
    {

        <ul class="pagination justify-content-end">

            @if (Model.Pager.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-controller="Institute" asp-action="ManageCircular" asp-route-page="1">First</a>
                </li>
                <li class="page-item">
                    <a class="page-link" asp-controller="Institute" asp-action="ManageCircular" asp-route-page="@(Model.Pager.CurrentPage-1)">Previous</a>
                </li>
            }

            @for (var pge = Model.Pager.StartPage; pge <= Model.Pager.Endpage; pge++)
            {
                <li class="page-item @(pge == Model.Pager.CurrentPage ? "active" : ""  )">
                    <a class="page-link" asp-controller="Institute" asp-action="ManageCircular" asp-route-page="@pge">  @pge </a>
                </li>
            }
            @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" asp-controller="Institute" asp-action="ManageCircular" asp-route-page="@(Model.Pager.CurrentPage + 1)">Next</a>
                </li>
                <li class="page-item">
                    <a class="page-link" asp-controller="Institute" asp-action="ManageCircular" asp-route-page="@(Model.Pager.TotalPages)">Last</a>
                </li>
            }
        </ul>
    }
</div>
<div id="wrapper">
    @if (ViewBag.AddCircularSuccess != null)
    {

        @* <script>alert("@ViewBag.AddCircularSuccess")</script>*@
        <div id="snackbar" class="snackbar-success "><i class="fa fa-check" aria-hidden="true"></i> @ViewBag.AddCircularSuccess</div>
        <script>
            var x = document.getElementById("snackbar");
            x.className = "show";
            setTimeout(function () { x.className = x.className.replace("show", ""); }, 5000);
        </script>
    }
    @if (ViewBag.AddCircularError != null)
    {
        @* <script>alert("@ViewBag.AddCircularError")</script>*@
        <div id="snackbardanger"><i class="fa fa-times" aria-hidden="true"></i> @ViewBag.AddCircularError</div>
        <script>
            var x = document.getElementById("snackbardanger");
            x.className = "show";
            setTimeout(function () { x.className = x.className.replace("show", ""); }, 5000);
        </script>
    }
    @if (ViewBag.UpdateCircularSuccess != null)
    {
        @* <script>alert("@ViewBag.UpdateCircularSuccess")</script>*@
        <div id="snackbar" class="snackbar-success"><i class="fa fa-check" aria-hidden="true"></i> @ViewBag.UpdateCircularSuccess</div>
        <script>
            var x = document.getElementById("snackbar");
            x.className = "show";
            setTimeout(function () { x.className = x.className.replace("show", ""); }, 5000);
        </script>
    }
    @if (ViewBag.UpdateCircularError != null)
    {
        @*<script>alert("@ViewBag.UpdateCircularError")</script>*@
        <div id="snackbardanger"><i class="fa fa-times" aria-hidden="true"></i> @ViewBag.UpdateCircularError</div>
        <script>
            var x = document.getElementById("snackbardanger");
            x.className = "show";
            setTimeout(function () { x.className = x.className.replace("show", ""); }, 5000);
        </script>
    }
    @if (ViewBag.DeleteCircularSuccess != null)
    {

        @* <script>alert("@ViewBag.AddCircularSuccess")</script>*@
        <div id="snackbar" class="snackbar-success "><i class="fa fa-check" aria-hidden="true"></i> @ViewBag.DeleteCircularSuccess</div>
        <script>
            var x = document.getElementById("snackbar");
            x.className = "show";
            setTimeout(function () { x.className = x.className.replace("show", ""); }, 5000);
        </script>
    }
</div>

<div class="col-md-11">
    <div class="container">
        <!-- The Modal -->
        <div class="modal" id="viewCircular">
            <div class="modal-dialog">
                <div class="modal-content">

                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title text-center">View Circular</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>

                    <div class="modal-body">
                        <table class="table table-borderless">
                            <tr>
                                <th>
                                    <label>School Name</label>
                                </th>
                                <td>
                                    <span id="detailsSchoolName"></span>
                                </td>
                            </tr>
                            <tr>
                                <th>
                                    <label>Circular Title</label>
                                </th>
                                <td>
                                    <span id="detailsCircularTitle"></span>
                                </td>
                            </tr>
                            <tr>
                                <th>
                                    <label>Description</label>
                                </th>
                                <td>
                                    <span id="detailsDescription"></span>
                                </td>
                            </tr>
                            <tr>
                                <th>
                                    <label>Uploaded File</label>
                                </th>
                                <td>
                                    <a href="" id="detailsUploadedFile"></a>
                                </td>
                            </tr>
                        </table>
                    </div>

                    <!-- Modal footer -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>

<div class="col-md-11">


    <div class="container">

        <div class="modal" id="editCircular">
            <div class="modal-dialog">
                <div class="modal-content">


                    <div class="modal-header">
                        <h4 class="modal-title text-center">Edit Circular</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>


                    <div class="modal-body">
                        <form method="post" novalidate enctype="multipart/form-data" asp-action="UpdateCircular" asp-controller="Institute">
                            <div class="spacing">
                                <span class="row text-danger">* marked are mandatory</span>
                            </div>
                            @Html.HiddenFor(m => m.EditCircular.Id, new { id = "circularId", name = "circularId" })
                            <table class="table table-borderless">
                                <tr>
                                    <th>
                                        <label>Select School<span class="text-danger">*</span></label>
                                    </th>
                                    <td>

                                        <select class="form-control" asp-for="EditCircular.SchoolId" asp-items="Model.Schools" id="updateschool">
                                            <option disabled selected hidden> Select School</option>
                                        </select>
                                        <span asp-validation-for="EditCircular.SchoolId" class="text-danger"></span>
                                    </td>
                                </tr>
                                <tr>
                                    <th>
                                        <label>Circular Title<span class="text-danger">*</span></label>
                                    </th>
                                    <td>
                                        <input type="text" class="form-control" asp-for="EditCircular.CircularTitle" id="updateCirculartitle" />
                                        <span asp-validation-for="EditCircular.CircularTitle" class="text-danger"></span>

                                    </td>
                                </tr>
                                <tr>
                                    <th>
                                        <label>Description<span class="text-danger">*</span></label>
                                    </th>
                                    <td>
                                        <textarea id="updateDescription" asp-for="EditCircular.Description" rows="4" cols="40"></textarea>
                                        <span asp-validation-for="EditCircular.Description" class="text-danger"></span>

                                    </td>
                                </tr>
                                <tr>
                                    <th>
                                        <label>File</label>  :

                                    </th>
                                    <td>
                                        <div class="row">
                                            <span id="filenameremove">
                                            </span>
                                            @Html.HiddenFor(m => m.EditCircular.File, new { id = "filename", name = "filename" })
                                            <a id="filenameremove"></a>
                                            <button type="button" class="close" id="removeButton" name="Cancel" onclick="removeFileName()" value="checked">
                                                <span aria-hidden="true">&times;</span>
                                            </button>
                                        </div>

                                    </td>


                                </tr>

                                <tr>
                                    <td colspan="2">

                                        @Html.TextBoxFor(m => m.EditCircular.fileUpload, new { type = "file" })
                                    </td>
                                </tr>



                            </table>
                            <div class="modal-footer">
                                <input type="submit" class="btn btn-primary float-lg-end ButtonDesign" value="Send" name="UpdateCircular" />
                                <input type="submit" class="btn btn-primary float-lg-end ButtonDesign" value="Save" name="UpdateCircular" />

                                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                            </div>



                        </form>


                    </div>

                </div>
            </div>
        </div>

    </div>
</div>

<!-- Confirmation modal -->
<div class="modal fade" id="confirmdelete" tabindex="-1" role="dialog" aria-labelledby="confirmdelete" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmdelete">Delete Confirmation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete this record ?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="action">Delete</button>
            </div>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        $('#action').click(function () {

           @* var itemId = $('#hdnItemId').val();
            alert("Start Value: " + itemId);*@
            alert(number);
            var actionLink = "/Institute/DeleteCircular?id=" + number;

            window.location.href = actionLink;
        });
    });
    var number = 0;
    function tempData(id) {
        console.log(number);
        number = id;
        console.log(number);
    }
    function removeFileName() {
        $('#filenameremove').text("");
        $('#removeButton').remove();
        $("#filename").val(null);
    }


    function ShowCircularDetail(id) {
        $.get("/Institute/ViewCircular", { Id: id }, function (data) {
            console.log(data);
            if (data) {
                $("#detailsSchoolName").text(data.data.schoolData.schoolName); $("#detailsCircularTitle").text(data.data.circularTitle);
                $("#detailsSchoolName").text(data.data.schoolData.schoolName); $("#detailsDescription").text(data.data.description);

                if (data.data.file != null) {

                    $("#detailsUploadedFile").text(data.data.file);
                    $("#detailsUploadedFile").attr("href", `/Institute/ViewFileData?fileName=${data.data.file}`)
                } else {
                    $("#detailsUploadedFile").text("No File Uploaded");
                    $("#detailsUploadedFile").attr("href", "#")
                }
            }
        });
    }

    function EditCircular(id) {
        $.get("/Institute/ViewCircular", { Id: id }, function (data) {
            console.log(data);
            if (data) {

                $("#updateschool").find(`option[value="${data.data.schoolId}"]`).attr('selected', 'selected');
                $("#updateCirculartitle").val(data.data.circularTitle);
                $("#circularId").val(data.data.id);
                $("#updateDescription").text(data.data.description);
                if (data.data.file != null) {
                    $("#filenameremove").text(data.data.file);
                    $("#filename").val(data.data.file);
                    $("#filenameremove").attr("href", `/Institute/ViewFileData?fileName=${data.data.file}`)

                }
                else {
                    $('#removeButton').remove();
                }

                //$("#detailsUploadedFile").text(data.data.file);
                //$("#detailsUploadedFile").attr("href", `/Institute/ViewFileData?fileName=${data.data.file}`)

            }
        });
    }
</script>