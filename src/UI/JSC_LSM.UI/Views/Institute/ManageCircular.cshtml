@model ManageCircularModel
@{
    ViewData["Title"] = "ManageCircular";
    Layout = "~/Views/Shared/_InstituteLayout.cshtml";
    Pager pager = new Pager();
    int pageNo = 0;
    if (ViewBag.Pager != null)
    {
        pager = ViewBag.Pager;
        pageNo = pager.CurrentPage;
    }
}
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
<style>
    .table-borderless, .table-borderless td, .table-borderless th {
        border: none;
        border-top: none !important;
    }
</style>
<h2 class="mt-4">Manage Circular</h2>

<div class="col-md-11">

    <button type="button" class="btn btn-primary btn-sm pull-right m-2" data-toggle="modal" data-target="#myModal">
        Create Circular
    </button>
    <div class="container">
        <!-- The Modal -->
        <div class="modal" id="myModal">
            <div class="modal-dialog">
                <div class="modal-content">

                    <!-- Modal Header -->
                    <div class="modal-header">
                        <h4 class="modal-title text-center">Create Circular</h4>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>

                    <!-- Modal body -->
                    <div class="modal-body">
                        <form method="post" novalidate enctype="multipart/form-data" asp-action="SendCircular" asp-controller="Institute">

                            <table class="table table-borderless">
                                <tr>
                                    <th>
                                        <label>Select School</label>
                                    </th>
                                    <td>

                                        <select class="form-control" asp-for="AddCircular.SchoolId" asp-items="Model.Schools" id="school">
                                            <option disabled selected hidden> Select School</option>
                                        </select>
                                        <span asp-validation-for="AddCircular.SchoolId" class="text-danger"></span>
                                    </td>
                                </tr>
                                <tr>
                                    <th>
                                        <label>Circular Title</label>
                                    </th>
                                    <td>
                                        <input type="text" class="form-control" asp-for="AddCircular.CircularTitle" id="circulartitle" />
                                        <span asp-validation-for="AddCircular.CircularTitle" class="text-danger"></span>

                                    </td>
                                </tr>
                                <tr>
                                    <th>
                                        <label>Description</label>
                                    </th>
                                    <td>
                                        <textarea id="description" asp-for="AddCircular.Description" rows="4" cols="40"></textarea>
                                        <span asp-validation-for="AddCircular.Description" class="text-danger"></span>

                                    </td>
                                </tr>
                                <tr>
                                    <th>
                                        <label>File</label>
                                    </th>
                                    <td>
                                        @*  <input type='file' name="fileUpload" asp-for="AddCircular.fileUpload" />
                                            <span asp-validation-for="AddCircular.fileUpload" class="text-danger"></span>*@
                                        @Html.TextBoxFor(m => m.AddCircular.fileUpload, new { type = "file" })
                                        <br />
                                        @Html.ValidationMessageFor(m => m.AddCircular.fileUpload, "", new { @class = "text-danger" })
                                    </td>
                                </tr>
                            </table>
                            <div class="modal-footer">
                                <input type="submit" class="btn btn-primary float-lg-end ButtonDesign" value="Send" name="SendCircular" />
                                <input type="submit" class="btn btn-primary float-lg-end ButtonDesign" value="Save" name="SendCircular" />
                                @*  <a href="/Institute/SaveCircular" class="btn btn-primary float-lg-end ButtonDesign">Save</a>*@
                                <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                            </div>

                        </form>


                    </div>

                </div>
            </div>
        </div>

    </div>
</div>
<br />
<div id="wrap" class="mt-3">
    <div class="container">
        <table cellpadding="0" cellspacing="0" border="0" width="100%" class="table table-striped table-bordered table-hover">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Circular Title</th>
                    <th>Description</th>
                    <th>School Name</th>
                    <th>Status</th>
                    <th>Created Date</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="tableData">
                @{ int i = 1; }
                @foreach (var item in Model.CircularListPagination)
                {
                    <tr>
                        <td>
                            <label>@i</label>
                            @{ i++; }
                        </td>
                        <td>
                            @item.CircularTitle
                        </td>
                        <td>
                            @item.Description
                        </td>

                        <td>
                            @item.SchoolData.SchoolName
                        </td>
                        <td>
                            @(item.Status?"Sent":"Draft")
                        </td>
                        <td>
                            @item.CreatedDate?.ToShortDateString()
                        </td>
                        <td>
                            @if (item.Status)
                            {
                                <a href="/Institute/View/${item.Id}"
                                   class="btn btn-link">View</a>
                            }

                            else
                            {<div>
                                    <a href="/Institute/EditCircular/${item.Id}"
                                       class="btn btn-link">Edit</a>
                                    <a href="/Institute/DeleteCircular/${item.Id}"
                                       class="btn btn-link">Delete</a>
                                </div>}

                        </td>
                    </tr>

                }
            </tbody>
        </table>
    </div>
</div>

<div class="container" id="paginationContainer">
    <span class="justify-content-start">
        <label>Rows Per Page</label>
        <select class="" id="rowsPerPage" onchange="changePages()">
            <option value="5" selected>5</option>
            <option value="25">25</option>
            <option value="50">50</option>
            <option value="100">100</option>
        </select>
    </span>
    @if (Model.Pager.TotalPages > 0)
    {

        <ul class="pagination justify-content-end">

            @if (Model.Pager.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-controller="Institute" asp-action="ManageCircular" asp-route-page="1">First</a>
                </li>
                <li class="page-item">
                    <a class="page-link" asp-controller="Institute" asp-action="ManageCircular" asp-route-page="@(Model.Pager.CurrentPage-1)">Previous</a>
                </li>
            }

            @for (var pge = Model.Pager.StartPage; pge <= Model.Pager.Endpage; pge++)
            {
                <li class="page-item @(pge == Model.Pager.CurrentPage ? "active" : ""  )">
                    <a class="page-link" asp-controller="Institute" asp-action="ManageCircular" asp-route-page="@pge">  @pge </a>
                </li>
            }
            @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" asp-controller="Institute" asp-action="ManageCircular" asp-route-page="@(Model.Pager.CurrentPage + 1)">Next</a>
                </li>
                <li class="page-item">
                    <a class="page-link" asp-controller="Institute" asp-action="ManageCircular" asp-route-page="@(Model.Pager.TotalPages)">Last</a>
                </li>
            }
        </ul>
    }
</div>
<div id="wrapper">
    @if (ViewBag.AddCircularSuccess != null)
    {
        <script>alert("@ViewBag.AddCircularSuccess")</script>
    }
    @if (ViewBag.AddCircularError != null)
    {
        <script>alert("@ViewBag.AddCircularError")</script>
    }
</div>

<script>
    function changePages() {
        var _size = $("#rowsPerPage :selected").val();
        //$.get("/Institute/ManageCircular", { page: 1, size=_size }, function (data) { }
        $.ajax({
            type: 'GET',
            url: '/Institute/ManageCircular',
            data: { page: 1, size=_size },
        });

</script>